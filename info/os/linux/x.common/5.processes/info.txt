# создать процесс из существующего процесса
fork()

# внести код исполняемой программы
exec()

# завершить процесс
exit()

# считать код возврата
wait()

PID - int идентификатор процесса, максимум 32768
PPID - идентификатор родительского процесса, есть у всех кроме init (пространство пользователя) и kthreadd (в ядре)

# файл процесса, тут можно увидеть владельца процесса, тот кто владеет каталого
/proc/<pid>

SIGINT - 2 (прерывание Ctrl-C)
SIGTERM - 15 - сигнал завершения, пишется обработчик
SIGKILL - 9 - не написать обработчик, завершает ОС, обработчик есть только у процесса init

# вывод процессов в системе
ps

все процессы
ps -e

# больше информации
ps -ef

# long
ps -efl

#удобно смотреть
ps -efl | less

# количество процессов
ps -efl | wc -l
ls -l /proc/ | wc -l

#дерево процессов
pstree

ls -l /proc/ | wc -l

# мои процессы посмотреть количество
ls -ld /proc/* | grep skorpion | wc -l


# смотреть переменные окружения процесса
cat /proc/7850/environ | tr '\0' '\n' | sort
cat /proc/[process ID]/environ | tr '\0' '\n' | sort