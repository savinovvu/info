#copy files:
docker cp config.conf dataContainer:/config/

# copy files from another container - ubuntu to dataContainer
docker run --volumes-from dataContainer ubuntu ls /config

# move data container to another machine
docker export dataContainer > dataContainer.tar
docker import dataContainer.tar


########################## NETWORK
# create network
docker network create network-name

# connect to network
docker network connect frontend-network redis
docker run -d --name=redis --net=network-name redis

# see path variables and hosts and networks
docker run --net=network-name alpine env
docker run --net=network-name alpine cat /etc/hosts
docker run --net=network-name alpine cat /etc/resolv.conf

# inspect network
docker network inspect frontend-network
# disconnect container
docker network disconnect frontend-network redis


######################## DATA MANAGING

# start with volume
docker run  -v /docker/redis-data:/backup ubuntu ls /backup

# map volume from other containers without acccess to persisted
docker run --volumes-from r1 -it ubuntu ls /data

# volume with read-only access: ro param
docker run --volumes-from r1 -it ubuntu ls /data


####################### LOGS

docker logs redis-server

# start with syslog driver
docker run -d --name redis-syslog --log-driver=syslog redis

# start without logs
docker run -d --name redis-syslog --log-driver=syslog redis

# inspect log config
docker inspect --format '{{ .HostConfig.LogConfig }}' redis-server

####################### RESTART

# restart 3 times
docker run -d --name restart-3 --restart=on-failure:3 scrapbook/docker-restart-example

# restart always
docker run -d --name restart-always --restart=always scrapbook/docker-restart-example

####################### METADATA

# single label
docker run -l user=12345 -d redis

# with label file
docker run --label-file=labels -d redis

# inspect with container-name
docker inspect container-name
docker inspect -f "{{json .Config.Labels }}" container-name
docker ps --filter "label=user=scrapbook"


# CONFIG
docker exec nginx cat /etc/nginx/conf.d/default.conf

################### METRICS
docker stats nginx
docker ps -q | xargs docker stats

################### FORMATTING OUTPUT
docker ps --format '{{.Names}} container is using {{.Image}} image'
docker ps --format 'table {{.Names}}\t{{.Image}}'
docker ps -q | xargs docker inspect --format '{{ .Id }} - {{ .Name }} - {{ .NetworkSettings.IPAddress }}'