version : '3.7'
x-healthcheck:
  &health_check
  interval: 1m
  timeout: 10s
  retries: 2
  start_period: 1m    
services:


  mysql:
    build: 
      context: germes-admin
      dockerfile: src/main/resources/docker/mysql.dockerfile
    logging:

      # none logs
      driver: none

      # declared network
    networks:
      - network1


      # not use it in dockerfile, if use docker-compose
    environment:    
      - MYSQL_USER=germes
      - MYSQL_PASSWORD=germes
      - MYSQL_DATABASE=germes

      # file with key value environment
    env_file:
      - ../mysql.env
    healthcheck:
      << : *health_check  
      test: mysql -ugermes -pgermes -e "SELECT version();"


  admin:
    build: 
      context: ..
      dockerfile: germes-web/src/main/resources/docker/tomcat.dockerfile

      # args for dockerfile
      args:
        - war_path=/opt/admin.war
    ports:
      - "9000:8080"
    networks:
      - network1

        # init order
    depends_on:
      - mysql

        # wait 5s before start mysql
    entrypoint: bash -c "sleep 5s && catalina.sh run"
    healthcheck:
      << : *health_check
      test: curl -f http://localhost:8080 || exit 1


  client:
    build: 
      context: ..
      dockerfile: germes-web/src/main/resources/docker/tomcat.dockerfile
      args:
        - war_path=/opt/client.war      
    ports:
      - "8080:8080"
    networks:
      - network1
    depends_on:
      - mysql
    entrypoint: bash -c "sleep 5s && catalina.sh run"
    healthcheck:
      << : *health_check
      test: curl -f http://localhost:8080 || exit 1


# declare network
networks:
  network1:
    driver: bridge
  